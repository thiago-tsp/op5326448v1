version: "3.4"
services:
  rtc-op5326448v1:
    container_name: rtc-op5326448v1
    image: rtc-op5326448v1:latest
    extra_hosts:
      - "atf.intranet.bb.com.br:170.66.49.15"
      - "dsdb2d01.plexdes.bb.com.br:170.66.41.62"      
    user: "${myUID}:${myGroup}" 
    # command: "./mvnw compile quarkus:dev -Ddebug=8000 -gs /usr/share/java/maven-3/conf/settings.xml"
    build:
      context: ../
      dockerfile: ./Dockerfile.dev 
      args:
        - DB2_USER=$DB2_USER
        - DB2_PASSWORD=$DB2_PASSWORD
    environment:
      # Opção para jmx debug
      - JAVA_JMX_DEBUG=-Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=8999 -Dcom.sun.management.jmxremote.rmi.port=8999 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
      # Opção para debug remoto em java
      # - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000
      #LOG
      - QUARKUS_LOG_CONSOLE_ENABLE=true
      - QUARKUS_LOG_CONSOLE_LEVEL=DEBUG
      # DATASOURCES E BANCO DE DADOS
      # - QUARKUS_DATASOURCE_URL=jdbc:h2:mem:exemplo;INIT=RUNSCRIPT FROM 'classpath:scripts/carga_testes.sql'
      # - QUARKUS_DATASOURCE_USERNAME=sa
      # - QUARKUS_DATASOURCE_PASSWORD=sa
      # - QUARKUS_DATASOURCE_DRIVER=org.h2.Driver
      # - QUARKUS_HIBERNATE_ORM_LOG_SQL=true
     # Descomente estas linhas para testar usando o DB2 de desenvolvimento.  (comente as linhas do H2 acima) 
      - QUARKUS_DATASOURCE_DRIVER=com.ibm.db2.jcc.DB2Driver
      - QUARKUS_DATASOURCE_URL=jdbc:db2://dsdb2d01.plexdes.bb.com.br:446/DSDB2D01
      - QUARKUS_DATASOURCE_USERNAME=${DB2_USER}
      - QUARKUS_DATASOURCE_PASSWORD=${DB2_PASSWORD}     
      # OPENAPI - SWAGGER
      - QUARKUS_SMALLRYE_OPENAPI_PATH=/api-docs-json
      - QUARKUS_SWAGGER_UI_PATH=/api-docs
      - QUARKUS_SWAGGER_UI_ALWAYS_INCLUDE=true
      # OPENTRACING - JAEGER
      - QUARKUS_JAEGER_SERVICE_NAME=rtc-op5326448v1
      - QUARKUS_JAEGER_SAMPLER_TYPE=const
      - QUARKUS_JAEGER_SAMPLER_PARAM=1
      - QUARKUS_JAEGER_AGENT_HOST_PORT=jaeger
      - REPO_LOCAL=/temp/.m2/repository
    #    Descomentar para usar HotDeploy
    volumes:
      - $HOME/.m2/repository:/temp/.m2/repository
      - $PWD:/app
    networks:
      - rtc-op5326448v1-net
    ports:
      - "8080:8080" # Server
      - "5005:5005" # DEBUG Não uilizar nos ambientes de producao/homologacao
      - "8999:8999" # DEBUG JMX Não utilizar nos ambientes de producao/homologacao

  # =============================================================================
  #   Sidecar CURIO Utilizado para realizar a comunicação entre IIB e aplicação
  # =============================================================================
  iib-curio:
    container_name: iib-curio
    extra_hosts:
      - "ram.intranet.bb.com.br:170.66.40.28"
      - "alm.intranet.bb.com.br:170.66.40.28"
      - "atf.intranet.bb.com.br:170.66.49.15"
      - "iib-slave.redis.bdh.desenv.bb.com.br:170.66.41.146"
      - "rvd.desenv.bb.com.br:170.66.49.205"
      - "mqsext.desenv.bb.com.br:201.33.147.253"
    image: atf.intranet.bb.com.br:5001/bb/iib/iib-curio:0.3.2
    ports:
      - "8081:8081"
    environment:
      - KUMULUZEE_ENV_NAME=dev
      - CURIO_CACHE_CONFIGURACAO_IIB=iib-slave.redis.bdh.desenv.bb.com.br
      - CURIO_CACHE_CONFIGURACAO_IIB_ID=iib:configuracao:k8s-integracao
      - CURIO_SIGLA_APLICACAO=rtc
      - CURIO_APLICACAO_HOST=http://rtc-op5326448v1:8080
      - CURIO_IIB_LOG_LEVEL=FINE
      - CURIO_DRY_RUN=false
      - CURIO_MODO_DESENVOLVIMENTO=true
      - KUMULUZEE_LOGS_LOGGERS0_NAME=br.com.bb
      - KUMULUZEE_LOGS_LOGGERS0_LEVEL=TRACE
      - CURIO_OP_PROVEDOR=br.com.bb.rtc.operacao:Op5326448-v1:2.2.0-SNAPSHOT
    networks:
      - rtc-op5326448v1-net

  # =====================================================================================
  #   Imagens para executar localmente, elas ja estarão disponiveis para seu namespace
  # =====================================================================================
  jaeger:
    image: jaegertracing/all-in-one
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    networks:
      - rtc-op5326448v1-net
volumes:
  maven-repo:

  # ====================================================================================
  #    Configuração da rede do docker para este microservico 
  #    Default: 192.168.203.192/27
  #    Caso você já tenha subido outro microservico nesta rede, você pode executar outras
  #  usando um dos enderecos a seguir: 
  #    - 192.168.203.224/27
  #    Neste caso não se esqueça de mudar os mapeamentos das portas para o localhost para 
  #  que não haja conflito, conforme exemplo abaixo: 
  #    Microservico 1: 
  #       ports:
  #         - "8080:8080" (porta 8080 do localhost vai mapear a 8080 do microservico)
  #    Microservico 2: 
  #       ports:
  #         - "8081:8080" (porta 8081 do localhost vai mapear a 8080 do microservico)  
  # ====================================================================================
networks:
  rtc-op5326448v1-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.129.0/24
